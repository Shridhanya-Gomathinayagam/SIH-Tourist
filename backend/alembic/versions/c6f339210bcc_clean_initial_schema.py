"""clean initial schema

Revision ID: c6f339210bcc
Revises: 
Create Date: 2025-09-16 15:54:00.714092

"""
from alembic import op
import sqlalchemy as sa
import geoalchemy2
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c6f339210bcc'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create only application tables
    op.create_table('users',
        sa.Column('id', sa.Integer(), primary_key=True, index=True),
        sa.Column('email', sa.String(), unique=True, index=True, nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('hashed_password', sa.String(), nullable=False),
        sa.Column('role', sa.String(), nullable=False),
        sa.Column('is_active', sa.Boolean(), server_default=sa.text('true')),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()')),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    )
    # Indexes for 'users' table are already created by column definitions

    op.create_table('tourists',
        sa.Column('id', sa.Integer(), primary_key=True, index=True),
        sa.Column('user_id', sa.Integer(), sa.ForeignKey('users.id'), unique=True),
        sa.Column('digital_id', sa.String(), unique=True, index=True),
        sa.Column('kyc_status', sa.String(), server_default='pending'),
        sa.Column('aadhaar_number', sa.String()),
        sa.Column('passport_number', sa.String()),
        sa.Column('phone_number', sa.String()),
        sa.Column('safety_score', sa.Float(), server_default='8.0'),
        sa.Column('current_location', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry')),
        sa.Column('blockchain_hash', sa.String()),
    )
    # Indexes for 'tourists' table are already created by column definitions

    op.create_table('police',
        sa.Column('id', sa.Integer(), primary_key=True, index=True),
        sa.Column('user_id', sa.Integer(), sa.ForeignKey('users.id'), unique=True),
        sa.Column('police_id', sa.String(), unique=True, index=True),
        sa.Column('station', sa.String()),
        sa.Column('jurisdiction', sa.String()),
        sa.Column('rank', sa.String()),
    )
    # Indexes for 'police' table are already created by column definitions

    op.create_table('tourism_dept',
        sa.Column('id', sa.Integer(), primary_key=True, index=True),
        sa.Column('user_id', sa.Integer(), sa.ForeignKey('users.id'), unique=True),
        sa.Column('employee_id', sa.String(), unique=True, index=True),
        sa.Column('department', sa.String()),
        sa.Column('region', sa.String()),
        sa.Column('designation', sa.String()),
    )
    # Indexes for 'tourism_dept' table are already created by column definitions

    op.create_table('trips',
        sa.Column('id', sa.Integer(), primary_key=True, index=True),
        sa.Column('tourist_id', sa.Integer(), sa.ForeignKey('tourists.id')),
        sa.Column('destination', sa.String(), nullable=False),
        sa.Column('start_date', sa.DateTime(timezone=True)),
        sa.Column('end_date', sa.DateTime(timezone=True)),
        sa.Column('transport_mode', sa.String()),
        sa.Column('stay_info', sa.Text()),
        sa.Column('health_info', sa.Text()),
        sa.Column('status', sa.String(), server_default='active'),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()')),
    )
    # Index for 'trips.id' is already created by column definition

    op.create_table('emergency_contacts',
        sa.Column('id', sa.Integer(), primary_key=True, index=True),
        sa.Column('trip_id', sa.Integer(), sa.ForeignKey('trips.id')),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('relation', sa.String()),
        sa.Column('phone', sa.String(), nullable=False),
        sa.Column('email', sa.String()),
        sa.Column('is_primary', sa.Boolean(), server_default=sa.text('false')),
    )
    # Index for 'emergency_contacts.id' is already created by column definition

    op.create_table('alerts',
        sa.Column('id', sa.Integer(), primary_key=True, index=True),
        sa.Column('tourist_id', sa.Integer(), sa.ForeignKey('tourists.id')),
        sa.Column('type', sa.String(), nullable=False),
        sa.Column('priority', sa.String(), server_default='medium'),
        sa.Column('status', sa.String(), server_default='active'),
        sa.Column('message', sa.Text()),
        sa.Column('location', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry')),
        sa.Column('address', sa.String()),
        sa.Column('alert_metadata', sa.Text()),
        sa.Column('assigned_officer_id', sa.Integer(), sa.ForeignKey('police.id')),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()')),
        sa.Column('acknowledged_at', sa.DateTime(timezone=True)),
        sa.Column('resolved_at', sa.DateTime(timezone=True)),
    )
    # Index for 'alerts.id' is already created by column definition

    op.create_table('locations',
        sa.Column('id', sa.Integer(), primary_key=True, index=True),
        sa.Column('tourist_id', sa.Integer(), sa.ForeignKey('tourists.id')),
        sa.Column('latitude', sa.Float(), nullable=False),
        sa.Column('longitude', sa.Float(), nullable=False),
        sa.Column('location', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry')),
        sa.Column('address', sa.String()),
        sa.Column('accuracy', sa.Float()),
        sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()')),
    )
    # Index for 'locations.id' is already created by column definition

    op.create_table('safety_zones',
        sa.Column('id', sa.Integer(), primary_key=True, index=True),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('zone_type', sa.String(), nullable=False),
        sa.Column('geometry', geoalchemy2.types.Geometry(geometry_type='POLYGON', from_text='ST_GeomFromEWKT', name='geometry')),
        sa.Column('safety_score', sa.Float(), server_default='5.0'),
        sa.Column('description', sa.String()),
        sa.Column('is_active', sa.Boolean(), server_default=sa.text('true')),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()')),
    )
    # Index for 'safety_zones.id' is already created by column definition

    op.create_table('evidence',
        sa.Column('id', sa.Integer(), primary_key=True, index=True),
        sa.Column('alert_id', sa.Integer(), sa.ForeignKey('alerts.id')),
        sa.Column('file_name', sa.String(), nullable=False),
        sa.Column('file_type', sa.String(), nullable=False),
        sa.Column('file_size', sa.BigInteger()),
        sa.Column('s3_key', sa.String(), nullable=False),
        sa.Column('s3_url', sa.String()),
        sa.Column('hash_value', sa.String()),
        sa.Column('blockchain_hash', sa.String()),
        sa.Column('uploaded_by', sa.Integer(), sa.ForeignKey('users.id')),
        sa.Column('description', sa.Text()),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()')),
    )
    # Index for 'evidence.id' is already created by column definition
    # ### end Alembic commands ###
    # The existing tiger and spatial_ref_sys tables are not touched by this upgrade.
    # No changes are needed for the existing tiger and topology tables as they are outside the application's schema.